{"version":3,"sources":["components/control-panel/control-panel.module.css","components/number-pad/number-pad.module.css","components/header/header.module.css","components/padlock/padlock.module.css","App.module.css","components/app-wrapper/app-wrapper.module.css","components/header/header.tsx","components/control-panel/control-panel.tsx","components/number-pad/number-pad.tsx","components/padlock/padlock.tsx","components/app-wrapper/app-wrapper.tsx","App.tsx","reportWebVitals.ts","index.tsx","service/lockService.ts"],"names":["module","exports","Header","className","styles","header","title","description","ControlPanel","props","panel","onClick","unlock","btn","controller","isLocked","window","alert","NumberPad","firstDigitRef","useRef","secondDigitRef","thridDigitRef","updateCurrentPasscode","code","current","value","pad","ref","onChange","num","defaultValue","placeholder","min","max","type","Padlock","shankRef","useEffect","toggleShankUI","style","transform","padlock","shank","body","service","AppWrapper","useState","getIsLocked","setIsLocked","getCurrentPasscode","currentPasscode","setCurrentPasscode","unlockPadlockFromService","passcode","lockPadlockFromService","lock","wrapper","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","lockService","this","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4dd7799.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"control-panel_panel__2WFXC\",\"controller\":\"control-panel_controller__3hGln\",\"btn\":\"control-panel_btn__34eNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pad\":\"number-pad_pad__2xgsv\",\"num\":\"number-pad_num__27tWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\",\"title\":\"header_title__1DXxp\",\"description\":\"header_description__2Df_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"padlock\":\"padlock_padlock__1LA-k\",\"shank\":\"padlock_shank__8dsq1\",\"body\":\"padlock_body__1yE4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app-wrapper_wrapper__76YM4\"};","import styles from './header.module.css';\n\nconst Header = () => {\n    return (\n        <div className={styles.header}>\n            <h1 className={styles.title}>Digital Padlock</h1>\n            <p className={styles.description}>This content has been locked</p>\n        </div>\n    )};\n\nexport default Header;","import { LockService } from '../../service/lockService';\nimport styles from './control-panel.module.css';\n\ninterface PadlockProps {\n    service: (LockService | null);\n    unlock(): void;\n    isLocked: boolean;\n}\n\nconst ControlPanel = (props: PadlockProps) => {\n\n    // Show Hint for password\n    const showHint = () => {\n        window.alert(\"Passcode is #123\");\n    }\n    \n    return (\n        <div className={styles.panel}>\n            <button onClick={() => {props.unlock()}} className={`${styles.btn} ${styles.controller}`}>\n                { props.isLocked ? 'Unlock' : 'Lock'}\n            </button>\n            <button onClick={showHint} className={styles.btn}><i className=\"far fa-question-circle\"></i></button>\n        </div>\n    );\n}\n\nexport default ControlPanel;","import { useRef, useState } from 'react';\nimport { LockService } from '../../service/lockService';\nimport styles from './number-pad.module.css';\n\ninterface PadlockProps {\n    isLocked: (boolean | null);\n    service: (LockService | null);\n    updateCurrentPasscode(passcode: string): void;\n}\n\nconst NumberPad = (props: PadlockProps) => {\n\n    // input refs\n    const firstDigitRef = useRef<HTMLInputElement>(null);\n    const secondDigitRef = useRef<HTMLInputElement>(null);\n    const thridDigitRef = useRef<HTMLInputElement>(null);\n\n    // update current passcode and pass it up to the AppWrapper Component\n    const updateCurrentPasscode = () => {\n        const code: string = firstDigitRef.current?.value! + secondDigitRef.current?.value! + thridDigitRef.current?.value!;\n        props.updateCurrentPasscode(code);\n    }\n    \n    return(\n        <div className={styles.pad}>\n            <input ref={firstDigitRef} onChange={updateCurrentPasscode} className={styles.num} defaultValue='0' placeholder=\"0\" min={0} max={9} type=\"number\" />\n            <input ref={secondDigitRef} onChange={updateCurrentPasscode} className={styles.num} defaultValue='0' placeholder=\"0\" min={0} max={9} type=\"number\" />\n            <input ref={thridDigitRef} onChange={updateCurrentPasscode} className={styles.num} defaultValue='0' placeholder=\"0\" min={0} max={9} type=\"number\" />\n        </div>\n    );\n}\n\nexport default NumberPad;","import { useEffect, useRef } from 'react';\nimport { LockService } from '../../service/lockService';\nimport NumberPad from '../number-pad/number-pad';\nimport styles from './padlock.module.css';\n\ninterface PadlockProps {\n    isLocked: (boolean | null);\n    service: (LockService | null);\n    updateCurrentPasscode(passcode: string): void;\n}\n\nconst Padlock = (props: PadlockProps) => {\n\n    // shank UI Ref\n    const shankRef = useRef<HTMLDivElement>(null);\n\n    // shank style\n    const shankLockedStyle = 'translateY(35px)';\n    const shankUnlockedStyle = 'translateY(0px)';\n\n    // toggle shank UI whenever the padlock is locked/unlocked\n    useEffect(() => {\n        toggleShankUI();\n    }, [props.isLocked])\n\n\n    // update shank UI\n    const toggleShankUI = () => {        \n        if(shankRef.current != null)  {\n            if(props.isLocked) {\n                shankRef.current.style.transform = shankLockedStyle;\n            } else {\n                shankRef.current.style.transform = shankUnlockedStyle;\n            }\n        }\n    }\n\n    return(\n        <div className={styles.padlock}>\n            <div ref={shankRef} className={styles.shank}>\n            </div>\n            <div className={styles.body}>\n                <NumberPad isLocked ={props.isLocked} service={props.service} updateCurrentPasscode={props.updateCurrentPasscode}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Padlock;","import { useState } from 'react';\nimport { LockService } from '../../service/lockService';\nimport ControlPanel from '../control-panel/control-panel';\nimport Padlock from '../padlock/padlock';\nimport styles from './app-wrapper.module.css';\n\n\ninterface ServiceProps {\n  service: (LockService | null);\n}\n\nconst AppWrapper = (props:ServiceProps) => {\n\n    const [isLocked, setIsLocked] = useState<boolean>(props.service!.getIsLocked);\n    const [currentPasscode, setCurrentPasscode] = useState<string>(props.service?.getCurrentPasscode!);\n    \n\n    // Lock/Unlock Padlock by changing component state\n    const unlockPadlock = () => {\n        if(isLocked) {\n            const status = unlockPadlockFromService(currentPasscode);\n            if(status) {\n                setIsLocked(false);\n            }\n        } else {\n            setIsLocked(true);\n            lockPadlockFromService();\n        }\n    }\n\n    // Change the \"isLocked\" state inside the service instance to \"locked\"\n    const unlockPadlockFromService = (passcode: string) => {\n        return props.service!.unlock(passcode);\n    }\n\n    // Change the \"isLocked\" state inside the service instance to \"unlocked\"\n    const lockPadlockFromService = () => {\n        props.service!.lock();\n    }\n\n    // Update currentPasscode state\n    const updateCurrentPasscode = (passcode: string) => {\n        setCurrentPasscode(passcode);        \n    }\n\n    return(\n        <div className={styles.wrapper}>\n            <Padlock isLocked ={isLocked} service={props.service} updateCurrentPasscode={updateCurrentPasscode}/>\n            <ControlPanel service={props.service} unlock={unlockPadlock} isLocked={isLocked}/>\n        </div>\n    );\n};\n\nexport default AppWrapper;","import styles from './App.module.css';\nimport Header from './components/header/header';\nimport AppWrapper from './components/app-wrapper/app-wrapper';\nimport { LockService } from './service/lockService';\n\ninterface ServiceProps {\n  service: (LockService | null);\n}\n\nfunction App(props: ServiceProps) {\n  return (\n    <div className={styles.app}>\n      <Header/>\n      <AppWrapper service={props.service}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport {LockService} from './service/lockService';\n\n// Create new Lock Service Instance\nconst lockService: LockService = new LockService('123');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App service={lockService}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","/**\n * LockService Class is the service class for this project\n */\n\nexport class LockService {\n    private isLocked: boolean = true;\n    private currentPasscode: string = '000'; // default current passcode\n\n    constructor(private passcode: string) {}\n\n    // Lock padlock\n    lock() {\n        this.isLocked = true;\n    }\n\n    /**\n     * Only unlock the padlock when correct passcode is given\n     * @param passcode \n     * @returns true if successfully unlocked. False otherwise\n     */\n\n    unlock(passcode: string):boolean {\n        if(passcode === this.passcode) {\n            this.isLocked = false;\n            return true;\n        }\n        \n        return false;\n    }\n\n\n    // Getters and Setters\n    get getIsLocked() {\n        return this.isLocked;\n    }\n\n    get getCurrentPasscode() {\n        return this.currentPasscode;\n    }\n    \n    set setCurrentPasscode(passcode: string) {\n        this.currentPasscode = passcode;\n    }\n}"],"sourceRoot":""}